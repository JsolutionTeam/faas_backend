<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zinsoft.faas.dao.mapper.UserDiaryMapper">
    <resultMap id="BaseResultMap" type="zinsoft.faas.dto.UserDiaryDto">
        <id column="USER_DIARY_SEQ" property="userDiarySeq" jdbcType="NUMERIC" />
        <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
        <result column="ACT_DT" property="actDt" jdbcType="CHAR" />
        <result column="REG_DTM" property="regDtm" jdbcType="DATE" />
        <result column="UPDATE_DTM" property="updateDtm" jdbcType="DATE" />
        <result column="STATUS_CD" property="statusCd" jdbcType="CHAR" />
        <result column="DIARY_T_CD" property="diaryTCd" jdbcType="CHAR" />
        <result column="CROP_SEQ" property="cropSeq" jdbcType="NUMERIC" />
        <result column="USER_CROP_SEQ" property="userCropSeq" jdbcType="NUMERIC" />
        <result column="ACTIVITY_SEQ" property="activitySeq" jdbcType="NUMERIC" />
        <result column="MAN_SELF" property="manSelf" jdbcType="NUMERIC" />
        <result column="MAN_SELF_TM" property="manSelfTm" jdbcType="NUMERIC" />
        <result column="MAN_SELF_TMM" property="manSelfTmm" jdbcType="NUMERIC" />
        <result column="WOMAN_SELF" property="womanSelf" jdbcType="NUMERIC" />
        <result column="WOMAN_SELF_TM" property="womanSelfTm" jdbcType="NUMERIC" />
        <result column="WOMAN_SELF_TMM" property="womanSelfTmm" jdbcType="NUMERIC" />
        <result column="MAN_HIRE" property="manHire" jdbcType="NUMERIC" />
        <result column="MAN_HIRE_TM" property="manHireTm" jdbcType="NUMERIC" />
        <result column="MAN_HIRE_TMM" property="manHireTmm" jdbcType="NUMERIC" />
        <result column="WOMAN_HIRE" property="womanHire" jdbcType="NUMERIC" />
        <result column="WOMAN_HIRE_TM" property="womanHireTm" jdbcType="NUMERIC" />
        <result column="WOMAN_HIRE_TMM" property="womanHireTmm" jdbcType="NUMERIC" />
        <result column="SKY_T_CD" property="skyTCd" jdbcType="VARCHAR" />
        <result column="TMN" property="tmn" jdbcType="FLOAT" />
        <result column="TMX" property="tmx" jdbcType="FLOAT" />
        <result column="RNF" property="rnf" jdbcType="FLOAT" />
        <result column="TEMP" property="temp" jdbcType="FLOAT" />
        <result column="REH" property="reh" jdbcType="FLOAT" />
        <result column="REMARK" property="remark" jdbcType="VARCHAR" />
        <result column="ACT_NM" property="actNm" jdbcType="VARCHAR" />
        <result column="UNIT_PACK" property="unitPack" jdbcType="NUMERIC" />
        <result column="PACK_T_CD" property="packTCd" jdbcType="CHAR" />
        <result column="QUAN" property="quan" jdbcType="FLOAT" />
        <result column="GRADE_T_CD" property="gradeTCd" jdbcType="CHAR" />
        <result column="GRADE_T_CD_NM" property="gradeTCdNm" jdbcType="VARCHAR" />

        <result column="USER_NM" property="userNm" jdbcType="VARCHAR" />
        <result column="DIARY_T_CD_NM" property="diaryTCdNm" jdbcType="VARCHAR" />
        <result column="CROP_NM" property="cropNm" jdbcType="VARCHAR" />
        <result column="SKY_T_CD_NM" property="skyTCdNm" jdbcType="VARCHAR" />
        <result column="PACK_T_CD_NM" property="packTCdNm" jdbcType="VARCHAR" />

        <result column="ADDR1" property="addr" jdbcType="VARCHAR" />
        <result column="EMAIL_ADDR" property="emailAddr" jdbcType="VARCHAR" />
        <result column="USER_CROP_ALIAS_NM" property="userCropAliasNm" jdbcType="VARCHAR" />
        
        <result column="INNING" property="inning" jdbcType="NUMERIC" />
        <result column="ACT_CNT" property="actCnt" jdbcType="NUMERIC" />
    </resultMap>

    <resultMap id="aggregateResultMap" type="zinsoft.faas.vo.UserDiaryAggregate">
        <result property="sumManSelf" column="sum_man_self" jdbcType="NUMERIC"/>
        <result property="sumManSelfTm" column="sum_man_self_tm" jdbcType="NUMERIC"/>
        <result property="sumManSelfTmm" column="sum_man_self_tmm" jdbcType="NUMERIC"/>
        <result property="sumWomanSelf" column="sum_woman_self" jdbcType="NUMERIC"/>
        <result property="sumWomanSelfTm" column="sum_woman_self_tm" jdbcType="NUMERIC"/>
        <result property="sumWomanSelfTmm" column="sum_woman_self_tmm" jdbcType="NUMERIC"/>
        <result property="sumManHire" column="sum_man_hire" jdbcType="NUMERIC"/>
        <result property="sumManHireTm" column="sum_man_hire_tm" jdbcType="NUMERIC"/>
        <result property="sumManHireTmm" column="sum_man_hire_tmm" jdbcType="NUMERIC"/>
        <result property="sumWomanHire" column="sum_woman_hire" jdbcType="NUMERIC"/>
        <result property="sumWomanHireTm" column="sum_woman_hire_tm" jdbcType="NUMERIC"/>
        <result property="sumWomanHireTmm" column="sum_woman_hire_tmm" jdbcType="NUMERIC"/>
    </resultMap>
    
    <insert id="insert" parameterType="zinsoft.faas.dto.UserDiaryDto">
        <selectKey resultType="Long" keyProperty="userDiarySeq" order="BEFORE">
            SELECT seq_user_diary_seq.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO tf_user_diary (user_diary_seq,
                             user_id,
                             act_dt,
                             reg_dtm,
                             update_dtm,
                             status_cd,
                             diary_t_cd,
                             crop_seq,
                             user_crop_seq,
                             activity_seq,
                             man_self,
                             man_self_tm,
                             woman_self,
                             woman_self_tm,
                             man_hire,
                             man_hire_tm,
                             woman_hire,
                             woman_hire_tm,
                             sky_t_cd,
                             tmn,
                             tmx,
                             rnf,
                             reh,
                             remark,
                             act_nm,
                             unit_pack,
                             pack_t_cd,
                             quan,
                             grade_t_cd,
                             man_self_tmm,
                             woman_self_tmm,
                             man_hire_tmm,
                             woman_hire_tmm)
             VALUES (#{userDiarySeq},
                     #{userId},
                     #{actDt},
                     SYSDATE,
                     SYSDATE,
                     'N',
                     #{diaryTCd},
                     #{cropSeq},
                     #{userCropSeq},
                     #{activitySeq,jdbcType=NUMERIC},
                     #{manSelf,jdbcType=NUMERIC},
                     #{manSelfTm,jdbcType=NUMERIC},
                     #{womanSelf,jdbcType=NUMERIC},
                     #{womanSelfTm,jdbcType=NUMERIC},
                     #{manHire,jdbcType=NUMERIC},
                     #{manHireTm,jdbcType=NUMERIC},
                     #{womanHire,jdbcType=NUMERIC},
                     #{womanHireTm,jdbcType=NUMERIC},
                     #{skyTCd,jdbcType=VARCHAR},
                     #{tmn,jdbcType=NUMERIC},
                     #{tmx,jdbcType=NUMERIC},
                     #{rnf,jdbcType=NUMERIC},
                     #{reh,jdbcType=NUMERIC},
                     #{remark,jdbcType=VARCHAR},
                     #{actNm,jdbcType=VARCHAR},
                     #{unitPack,jdbcType=NUMERIC},
                     #{packTCd,jdbcType=CHAR},
                     #{quan,jdbcType=FLOAT},
                     #{gradeTCd,jdbcType=CHAR},
                     #{manSelfTmm,jdbcType=NUMERIC},
                     #{womanSelfTmm,jdbcType=NUMERIC},
                     #{manHireTmm,jdbcType=NUMERIC},
                     #{womanHireTmm,jdbcType=NUMERIC})
    </insert>

    <insert id="copy">
        INSERT INTO tf_user_diary
           SELECT seq_user_diary_seq.NEXTVAL, a.*
             FROM (  SELECT z.user_id,
                            #{dstYear} || SUBSTR (z.act_dt, 5, 8) act_dt,
                            SYSDATE reg_dtm,
                            SYSDATE update_dtm,
                            'N' status_cd,
                            'P' diary_t_cd,
                            z.crop_seq,
                            z.activity_seq,
                            z.man_self,
                            z.man_self_tm,
                            z.woman_self,
                            z.woman_self_tm,
                            z.man_hire,
                            z.man_hire_tm,
                            z.woman_hire,
                            z.woman_hire_tm,
                            NULL sky_t_cd,
                            NULL tmn,
                            NULL tmx,
                            NULL rnf,
                            NULL reh,
                            z.memo,
                            z.remark,
                            z.act_nm,
                            z.unit_pack,
                            z.pack_t_cd,
                            z.quan,
                            z.grade_t_cd,
                            z.man_self_tmm,
                            z.woman_self_tmm,
                            z.man_hire_tmm,
                            z.woman_hire_tmm,
                            z.user_crop_seq
                       FROM tf_user_diary z
                      WHERE     z.status_cd = 'N'
                            AND z.user_id = #{userId}
                            AND z.act_dt LIKE #{srcYear} || '%'
                            AND z.diary_t_cd = 'D'
                   ORDER BY z.user_diary_seq) a
    </insert>

    <select id="get" parameterType="zinsoft.faas.dto.UserDiaryDto" resultMap="BaseResultMap">
       <!--  SELECT a.user_diary_seq,
               a.user_id,
               a.act_dt,
               a.reg_dtm,
               a.update_dtm,
               a.status_cd,
               a.diary_t_cd,
               (SELECT z.code_nm FROM tf_code z WHERE z.code_id = 'DIARY_T_CD' AND z.code_val = a.diary_t_cd) diary_t_cd_nm,
               a.crop_seq,
               (SELECT z.expr_nm FROM tf_crop z WHERE z.crop_seq = a.crop_seq) crop_nm,
               a.user_crop_seq,
               a.activity_seq,
               a.man_self,
               a.man_self_tm,
               a.woman_self,
               a.woman_self_tm,
               a.man_hire,
               a.man_hire_tm,
               a.woman_hire,
               a.woman_hire_tm,
               a.sky_t_cd,
               (SELECT z.code_nm FROM tf_code z WHERE z.code_id = 'SKY_T_CD' AND z.code_val = a.sky_t_cd) sky_t_cd_nm,
               a.tmn,
               a.tmx,
               a.rnf,
               a.reh,
               a.remark,
               NVL (b.act_nm, a.act_nm) act_nm,
               a.unit_pack,
               a.pack_t_cd,
               (SELECT z.code_nm FROM tf_code z WHERE z.code_id = 'PACK_T_CD' AND z.code_val = a.pack_t_cd) pack_t_cd_nm,
               a.quan,
               a.grade_t_cd,
               (SELECT z.code_nm FROM tf_code z WHERE z.code_id = 'GRADE_T_CD' AND z.code_val = a.grade_t_cd) grade_t_cd_nm,
               a.man_self_tmm,
               a.woman_self_tmm,
               a.man_hire_tmm,
               a.woman_hire_tmm,
               c.alias_nm user_crop_alias_nm
          FROM tf_user_diary a, tf_activity b, tf_user_crop c
         WHERE a.activity_seq = b.activity_seq(+)
           AND a.user_diary_seq = #{userDiarySeq}
           AND a.user_id = #{userId}
           AND a.user_crop_seq = c.user_crop_seq -->
    </select>

    <sql id="selectList">
        SELECT a.user_diary_seq,
               a.user_id,
               c.user_nm,
               a.act_dt,
               a.reg_dtm,
               a.update_dtm,
               a.status_cd,
               a.diary_t_cd,
               (SELECT z.code_nm FROM tf_code z WHERE z.code_id = 'DIARY_T_CD' AND z.code_val = a.diary_t_cd) diary_t_cd_nm,
               a.crop_seq,
               a.user_crop_seq,
               a.activity_seq,
               a.man_self,
               a.man_self_tm,
               a.man_self_tmm,
               a.woman_self,
               a.woman_self_tm,
               a.woman_self_tmm,
               a.man_hire,
               a.man_hire_tm,
               a.man_hire_tmm,
               a.woman_hire,
               a.woman_hire_tm,
               a.woman_hire_tmm,
               a.sky_t_cd,
               (SELECT z.code_nm FROM tf_code z WHERE z.code_id = 'SKY_T_CD' AND z.code_val = a.sky_t_cd) sky_t_cd_nm,
               a.tmn,
               a.tmx,
               a.rnf,
               a.temp,
               a.reh,
               a.remark,
               IFNULL (a.act_nm, b.act_nm) act_nm,
               CASE WHEN a.activity_seq != 40 THEN
                  DENSE_RANK() OVER(PARTITION BY a.user_id, a.diary_t_cd, a.act_dt, a.activity_seq ORDER BY a.user_diary_seq) 
               ELSE
                  1
               END
                inning,
               CASE WHEN a.activity_seq != 40 THEN
                  COUNT(*) OVER(PARTITION BY a.user_id, a.diary_t_cd, a.act_dt, a.activity_seq)
               ELSE
                  1
               END
                act_cnt,
               a.unit_pack,
               a.pack_t_cd,
               (SELECT z.code_nm FROM tf_code z WHERE z.code_id = 'PACK_T_CD' AND z.code_val = a.pack_t_cd) pack_t_cd_nm,
               a.quan,
               c.addr1,
               c.email_addr,
               a.grade_t_cd,
               (SELECT z.code_nm FROM tf_code z WHERE z.code_id = 'GRADE_T_CD' AND z.code_val = a.grade_t_cd) grade_t_cd_nm
          FROM tf_user_diary a 
     LEFT JOIN tf_activity b ON (a.activity_seq = b.activity_seq)
          JOIN vf_user_info c ON (a.user_id = c.user_id)
         WHERE     a.status_cd = 'N'
           <if test="search.userId != null and search.userId != ''">
               AND a.user_id = #{search.userId}
           </if>
           <choose>
               <when test="search.actDt != null and search.actDt != ''">
                   AND a.act_dt LIKE #{search.actDt} || '%'
               </when>
               <when test="search.sActDt != null and search.sActDt != '' and search.eActDt != null and search.eActDt != ''">
                   AND a.act_dt BETWEEN #{search.sActDt} AND #{search.eActDt}
               </when>
               <otherwise>
                   AND 1 = 0
               </otherwise>
           </choose>
           <if test="search.diaryTCd != null and search.diaryTCd != ''">
               AND a.diary_t_cd = #{search.diaryTCd}
           </if>
           <if test="search.cropSeq != null and search.cropSeq != ''">
               AND a.crop_seq = #{search.cropSeq}
           </if>
           <if test="search.userCropSeq != null and search.userCropSeq != ''">
               AND a.user_crop_seq = #{search.userCropSeq}
           </if>
           <if test="search.activitySeq != null and search.activitySeq != ''">
               AND a.activity_seq = #{search.activitySeq} 
           </if>
   <if test="search.field != null and search.field != '' and search.keyword != null and search.keyword != ''">
       <choose>
           <when test="search.field == 'userId'">
               AND a.user_id LIKE '%' || #{search.keyword} || '%'
           </when>
           <when test="search.field == 'userNm'">
               AND xdb_dec('normal', c.user_nm) LIKE '%' || #{search.keyword} || '%'
           </when>
           <when test="search.field == 'remark'">
               AND (a.remark LIKE '%' || #{search.keyword} || '%' )
           </when>
           <otherwise>
               AND (a.user_id LIKE '%' || #{search.keyword} || '%'
                    OR xdb_dec('normal', c.user_nm) LIKE '%' || #{search.keyword} || '%'
                    OR a.remark LIKE '%' || #{search.keyword} || '%')
           </otherwise>
       </choose>
   </if>
      ORDER BY
          <choose>
              <when test="search.orderBy != null and search.orderBy == 'ASC'">
                  a.act_dt, a.user_diary_seq
              </when>
              <otherwise>
                  a.act_dt DESC, a.user_diary_seq DESC
              </otherwise>
          </choose>
    </sql>
    
    <select id="list" parameterType="Map" resultMap="BaseResultMap">
        <include refid="selectList"></include>
    </select>
    
    <select id="page" resultMap="BaseResultMap">
         <include refid="selectList"></include>
       LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
    </select>

    <select id="count" resultType="int">
        SELECT COUNT (*)
          FROM tf_user_diary a
          JOIN vf_user_info c ON (a.user_id = c.user_id)
          WHERE     a.status_cd = 'N'
           <if test="search.userId != null and search.userId != ''">
                AND a.user_id = #{search.userId}
           </if>
        <choose>
            <when test="search.actDt != null and search.actDt != ''">
                AND a.act_dt LIKE #{search.actDt} || '%'
            </when>
            <when test="search.sActDt != null and search.sActDt != '' and search.eActDt != null and search.eActDt != ''">
                AND a.act_dt BETWEEN #{search.sActDt} AND #{search.eActDt}
            </when>
            <otherwise>
                AND 1 = 0
            </otherwise>
        </choose>
            <if test="search.diaryTCd != null and search.diaryTCd != ''">
                AND a.diary_t_cd = #{search.diaryTCd}
            </if>
            <if test="search.cropSeq != null and search.cropSeq != ''">
                AND a.crop_seq = #{search.cropSeq}
            </if>
            <if test="search.userCropSeq != null and search.userCropSeq != ''">
                AND a.user_crop_seq = #{search.userCropSeq}
            </if>
            <if test="search.activitySeq != null and search.activitySeq != ''">
                AND a.activity_seq = #{search.activitySeq}
            </if>
    <if test="search.field != null and search.field != '' and search.keyword != null and search.keyword != ''">
        <choose>
            <when test="search.field == 'userId'">
                AND a.user_id LIKE '%' || #{search.keyword} || '%'
            </when>
            <when test="search.field == 'userNm'">
                AND xdb_dec('normal', c.user_nm) LIKE '%' || #{search.keyword} || '%'
            </when>
            <when test="search.field == 'remark'">
                AND d.remark LIKE '%' || #{search.keyword} || '%'
            </when>
            <otherwise>
                AND (a.user_id LIKE '%' || #{search.keyword} || '%'
                     OR xdb_dec('normal', c.user_nm) LIKE '%' || #{search.keyword} || '%'
                     OR d.remark LIKE '%' || #{search.keyword} || '%')
            </otherwise>
        </choose>
    </if>
    </select>

    <select id="listYear" resultType="String">
          SELECT SUBSTR (a.act_dt, 1, 4)
            FROM tf_user_diary a
           WHERE     a.status_cd = 'N'
                 AND a.user_id = #{userId}
             <if test="diaryTCd != null and diaryTCd != ''">
                 AND a.diary_t_cd = #{diaryTCd}
             </if>
             <if test="year != null and year != ''">
                 AND a.act_dt LIKE #{year} || '%'
             </if>
        GROUP BY SUBSTR (a.act_dt, 1, 4)
        ORDER BY 1
    </select>
    
    <select id="countUsedCrop" resultType="int">
        SELECT COUNT(*)
          FROM tf_user_diary a
         WHERE a.status_cd = 'N'
             AND a.user_id = #{userId}
             AND a.user_crop_seq = #{userCropSeq}
    </select>
    
    <select id="getAggregate" parameterType="Map" resultMap="aggregateResultMap">
        SELECT NVL ( SUM(a.man_self), 0) sum_man_self,
               NVL ( SUM(a.man_self_tm), 0) sum_man_self_tm,
               NVL ( SUM(a.man_self_tmm), 0) sum_man_self_tmm,
               NVL ( SUM(a.woman_self), 0) sum_woman_self,
               NVL ( SUM(a.woman_self_tm), 0) sum_woman_self_tm,
               NVL ( SUM(a.woman_self_tmm), 0) sum_woman_self_tmm,
               NVL ( SUM(a.man_hire), 0) sum_man_hire,
               NVL ( SUM(a.man_hire_tm), 0) sum_man_hire_tm,
               NVL ( SUM(a.man_hire_tmm), 0) sum_man_hire_tmm,
               NVL ( SUM(a.woman_hire), 0) sum_woman_hire,
               NVL ( SUM(a.woman_hire_tm), 0) sum_woman_hire_tm,
               NVL ( SUM(a.woman_hire_tmm), 0) sum_woman_hire_tmm
          FROM tf_user_diary a, vf_user_info c, tf_crop d, tf_user_crop e
         WHERE     a.user_id = c.user_id
               AND a.crop_seq = d.crop_seq(+)
               AND a.status_cd = 'N'
               AND a.user_crop_seq = e.user_crop_seq
           <if test="userId != null and userId != ''">
               AND a.user_id = #{userId}
           </if>
       <choose>
           <when test="actDt != null and actDt != ''">
               AND a.act_dt LIKE #{actDt} || '%'
           </when>
           <when test="sActDt != null and sActDt != '' and eActDt != null and eActDt != ''">
               AND a.act_dt BETWEEN #{sActDt} AND #{eActDt}
           </when>
           <otherwise>
               AND 1 = 0
           </otherwise>
       </choose>
           <if test="diaryTCd != null and diaryTCd != ''">
               AND a.diary_t_cd = #{diaryTCd}
           </if>
           <if test="cropSeq != null and cropSeq != ''">
               AND a.crop_seq = #{cropSeq}
           </if>
           <if test="userCropSeq != null and userCropSeq != ''">
               AND a.user_crop_seq = #{userCropSeq}
           </if>
           <if test="activitySeq != null and activitySeq != ''">
               AND a.activity_seq = #{activitySeq} 
           </if>
           <if test="remark != null and remark != ''">
               AND (a.remark LIKE '%' || #{remark} || '%' )
           </if>
   <if test="field != null and field != '' and keyword != null and keyword != ''">
       <choose>
           <when test="field == 'userId'">
               AND a.user_id LIKE '%' || #{keyword} || '%'
           </when>
           <when test="field == 'userNm'">
               AND xdb_dec('normal', c.user_nm) LIKE '%' || #{keyword} || '%'
           </when>
           <when test="field == 'cropNm'">
               AND d.expr_nm LIKE '%' || #{keyword} || '%'
           </when>
           <otherwise>
              AND (a.user_id LIKE '%' || #{keyword} || '%'
                    OR xdb_dec('normal', c.user_nm) LIKE '%' || #{keyword} || '%'
                    OR d.expr_nm LIKE '%' || #{keyword} || '%')
           </otherwise>
       </choose>
   </if>
    </select>

    <update id="update" parameterType="zinsoft.faas.dto.UserDiaryDto">
        UPDATE tf_user_diary
           SET act_dt = #{actDt},
               update_dtm = SYSDATE,
               diary_t_cd = #{diaryTCd},
               crop_seq = #{cropSeq},
               user_crop_seq = #{userCropSeq},
               activity_seq = #{activitySeq,jdbcType=NUMERIC},
               man_self = #{manSelf,jdbcType=NUMERIC},
               man_self_tm = #{manSelfTm,jdbcType=NUMERIC},
               woman_self = #{womanSelf,jdbcType=NUMERIC},
               woman_self_tm = #{womanSelfTm,jdbcType=NUMERIC},
               man_hire = #{manHire,jdbcType=NUMERIC},
               man_hire_tm = #{manHireTm,jdbcType=NUMERIC},
               woman_hire = #{womanHire,jdbcType=NUMERIC},
               woman_hire_tm = #{womanHireTm,jdbcType=NUMERIC},
               sky_t_cd = #{skyTCd,jdbcType=VARCHAR},
               tmn = #{tmn,jdbcType=NUMERIC},
               tmx = #{tmx,jdbcType=NUMERIC},
               rnf = #{rnf,jdbcType=NUMERIC},
               reh = #{reh,jdbcType=NUMERIC},
               remark = #{remark,jdbcType=VARCHAR},
               act_nm = #{actNm,jdbcType=VARCHAR},
               unit_pack = #{unitPack,jdbcType=NUMERIC},
               pack_t_cd = #{packTCd,jdbcType=CHAR},
               quan = #{quan,jdbcType=FLOAT},
               grade_t_cd = #{gradeTCd,jdbcType=CHAR},
               man_self_tmm = #{manSelfTmm,jdbcType=NUMERIC},
               woman_self_tmm = #{womanSelfTmm,jdbcType=NUMERIC},
               man_hire_tmm = #{manHireTmm,jdbcType=NUMERIC},
               woman_hire_tmm = #{womanHireTmm,jdbcType=NUMERIC}
         WHERE user_diary_seq = #{userDiarySeq}
           AND user_id = #{userId}
    </update>

    <update id="delete" parameterType="zinsoft.faas.dto.UserDiaryDto">
        UPDATE tf_user_diary
           SET update_dtm = SYSDATE,
               status_cd = 'D'
         WHERE user_diary_seq = #{userDiarySeq}
           AND user_id = #{userId}
    </update>

    <update id="deleteMultiple">
        UPDATE tf_user_diary
           SET update_dtm = SYSDATE,
               status_cd = 'D'
         WHERE     user_id = #{userId}
               AND user_diary_seq IN
              <foreach collection="userDiarySeqs" item="userDiarySeq" index="index" separator="," open="(" close=")">
                  #{userDiarySeq}
              </foreach>
    </update>

    <update id="deleteByUserId" parameterType="String">
        UPDATE tf_user_diary
           SET update_dtm = SYSDATE,
               status_cd = 'D'
         WHERE user_id = #{userId}
    </update>
</mapper>