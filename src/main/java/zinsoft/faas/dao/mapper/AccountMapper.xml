<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zinsoft.faas.dao.mapper.AccountMapper">
    <resultMap id="BaseResultMap" type="zinsoft.faas.dto.AccountDto">
        <result column="AC_ID" property="acId" jdbcType="CHAR" />
        <result column="REG_DTM" property="regDtm" jdbcType="DATE" />
        <result column="UPDATE_DTM" property="updateDtm" jdbcType="DATE" />
        <result column="STATUS_CD" property="statusCd" jdbcType="CHAR" />
        <result column="AC_NM" property="acNm" jdbcType="VARCHAR" />
        <result column="BP_T_CD" property="bpTCd" jdbcType="CHAR" />
        <result column="CD_T_CD" property="cdTCd" jdbcType="CHAR" />
        <result column="UP_AC_ID" property="upAcId" jdbcType="CHAR" />
        <result column="EXPR_YN" property="exprYn" jdbcType="CHAR" />
        <result column="EXPR_SEQ" property="exprSeq" jdbcType="NUMERIC" />
        <result column="INPUT_YN" property="inputYn" jdbcType="CHAR" />
        <result column="UPDATE_YN" property="updateYn" jdbcType="CHAR" />
        <result column="DELETE_YN" property="deleteYn" jdbcType="CHAR" />

        <result column="UP_AC_NM" property="upAcNm" jdbcType="CHAR"/>
        <result column="BP_T_CD_NM" property="bpTCdNm" jdbcType="CHAR"/>
        <result column="CD_T_CD_NM" property="cdTCdNm" jdbcType="CHAR"/>
        <result column="COST_T_CD" property="costTCd" jdbcType="CHAR"/>
        <result column="COST_T_CD_NM" property="costTCdNm" jdbcType="CHAR"/>
        <result column="G_CD" property="gCd" jdbcType="CHAR"/>
        <result column="G_CD_NM" property="gCdNm" jdbcType="CHAR"/>
        
        <result column="PS_T_CD" property="psTCd" jdbcType="CHAR" />
        <result column="PS_T_CD_NM" property="psTCdNm" jdbcType="VARCHAR" />
    </resultMap>

    <insert id="insert" parameterType="zinsoft.faas.dto.AccountDto">
        <selectKey resultType="String" keyProperty="acId" order="BEFORE">
            SELECT CASE
                      WHEN (SELECT COUNT (*)
                              FROM tf_account
                             WHERE ac_id IN (SELECT NVL (MAX (ac_id), 0) + 1
                                               FROM tf_account
                                              WHERE up_ac_id = #{upAcId})) > 0
                      THEN
                         (SELECT NVL (MAX (ac_id), 0) + 1 FROM tf_account)
                      ELSE
                         (SELECT NVL (MAX (ac_id), 0) + 1
                            FROM tf_account
                           WHERE up_ac_id = #{upAcId})
                   END
                      ac_id
              FROM DUAL
        </selectKey>
        INSERT INTO tf_ACCOUNT (AC_ID,
                        REG_DTM,
                        UPDATE_DTM,
                        STATUS_CD,
                        AC_NM,
                        BP_T_CD,
                        CD_T_CD,
                        UP_AC_ID,
                        EXPR_YN,
                        EXPR_SEQ,
                        INPUT_YN,
                        COST_T_CD,
                        UPDATE_YN,
                        DELETE_YN,
                        PS_T_CD)
        VALUES  (#{acId},
                 SYSDATE,
                 SYSDATE,
                 'N',
                 #{acNm},
                 #{bpTCd},
                 #{cdTCd},
                 #{upAcId},
                 'Y',
                 (SELECT NVL (MAX (expr_seq), 0) + 1
                    FROM tf_account
                   WHERE up_ac_id = #{upAcId}),
                 #{inputYn},
                 #{costTCd},
                 'Y',
                 'Y',
                 #{psTCd})
    </insert>

    <select id="get" parameterType="String" resultMap="BaseResultMap">
        SELECT a.ac_id,
               a.reg_dtm,
               a.update_dtm,
               a.status_cd,
               a.ac_nm,
               a.bp_t_cd,
               a.cd_t_cd,
               a.up_ac_id,
               (SELECT ac_nm
                  FROM tf_account
                 WHERE ac_id = a.up_ac_id)
                  up_ac_nm,
               a.expr_yn,
               a.expr_seq,
               a.input_yn,
               a.cost_t_cd,
               (SELECT code_nm
                  FROM tf_code b
                 WHERE code_id = 'COST_T_CD' AND code_val = a.cost_t_cd)
                  cost_t_cd_nm,
               a.update_yn,
               a.delete_yn,
               a.ps_t_cd,
               (SELECT x.code_nm
                  FROM tf_code x
                 WHERE x.code_id = 'PS_T_CD' AND x.code_val = a.ps_t_cd) ps_t_cd_nm
          FROM tf_account a
         WHERE a.ac_id = #{acId}
    </select>

    <select id="getAcIdByAcNm" parameterType="String" resultType="String">
        SELECT MAX (a.ac_id) ac_id
          FROM tf_account a
         WHERE     a.status_cd = 'N'
               AND LOWER (TRIM (a.ac_nm)) = LOWER (TRIM (#{acNm}))
    </select>

    <select id="list" parameterType="Map" resultMap="BaseResultMap">
        SELECT a.ac_id,
               a.reg_dtm,
               a.update_dtm,
               a.status_cd,
                <choose>
                    <when test="normalize != null and normalize == 'Y'.toString()">
                        LOWER (TRIM (a.ac_nm)) ac_nm,
                    </when>
                    <otherwise>
                        a.ac_nm,
                    </otherwise>
                </choose>
               a.bp_t_cd,
               a.cd_t_cd,
               a.up_ac_id,
               a.expr_yn,
               a.expr_seq,
               a.input_yn,
               a.cost_t_cd,
               a.update_yn,
               a.delete_yn,
               a.ps_t_cd,
               (SELECT x.code_nm
                  FROM tf_code x
                 WHERE x.code_id = 'PS_T_CD' AND x.code_val = a.ps_t_cd) ps_t_cd_nm
          FROM tf_account a
         WHERE a.status_cd = 'N'
         <if test="acId != null and acId != ''">
             <choose>
                 <when test="acId.length() == 3">
                     AND a.ac_id = #{acId}
                 </when>
                 <otherwise>
                     AND a.ac_id LIKE '%' || #{acId} || '%'
                 </otherwise>
             </choose>
         </if>
         <if test="acNm != null and acNm != ''">
               AND a.ac_nm LIKE '%' || #{acNm} || '%'
         </if>
         <if test="bpTCd != null and bpTCd != ''">
               AND a.bp_t_cd = #{bpTCd}
         </if>
         <if test="cdTCd != null and cdTCd != ''">
               AND a.cd_t_cd = #{cdTCd}
         </if>
         <if test="exprYn != null and exprYn != ''">
               AND a.expr_yn = #{exprYn}
         </if>
         <if test="inputYn != null and inputYn != ''">
               AND a.input_yn = #{inputYn}
         </if>
         <if test="upAcId != null and upAcId != ''">
               AND a.input_yn = 'Y'
               START WITH a.ac_id = #{upAcId}
               CONNECT BY PRIOR a.ac_id = a.up_ac_id
         </if>
         <if test="psTCd != null and psTCd != ''">
               AND a.ps_t_cd = #{psTCd}
         </if>
      ORDER BY
          <choose>
              <when test="orderBy == null or orderBy == 'ASC'">
                  a.ac_id
              </when>
              <when test="orderBy == null or orderBy == 'NAME_ASC'">
                  a.ac_nm 
              </when>
              <otherwise>
                  a.ac_id DESC
              </otherwise>
          </choose>
    </select>

    <select id="list2" parameterType="pagingParam" resultMap="BaseResultMap">
        SELECT a.ac_id,
               a.reg_dtm,
               a.update_dtm,
               a.status_cd,
               a.ac_nm,
               a.bp_t_cd,
               a.cd_t_cd,
               a.up_ac_id,
               a.expr_yn,
               a.expr_seq,
               a.input_yn,
               (SELECT ac_nm
                  FROM tf_account
                 WHERE ac_id = a.up_ac_id)
                  up_ac_nm,
               (SELECT code_nm
                  FROM tf_code
                 WHERE code_id = 'BP_T_CD' AND code_val = a.bp_t_cd)
                  bp_t_cd_nm,
               (SELECT code_nm
                  FROM tf_code
                 WHERE code_id = 'CD_T_CD' AND code_val = a.cd_t_cd)
                  cd_t_cd_nm,
               a.ps_t_cd,
               (SELECT x.code_nm
                  FROM tf_code x 
                 WHERE x.code_id = 'PS_T_CD' AND x.code_val = a.ps_t_cd) ps_t_cd_nm   
          FROM tf_account a
         WHERE a.status_cd = 'N'
          <if test="cond.keyword != null and cond.keyword != ''">
              <if test='cond.field == "acId"'>
                  AND a.ac_id LIKE '%' || #{cond.keyword} || '%'
              </if>
          </if>
          <if test="cond.keyword != null and cond.keyword != ''">
              <if test='cond.field == "acNm"'>
                  AND a.ac_nm LIKE '%' || #{cond.keyword} || '%'
              </if>
          </if>
      ORDER BY a.ac_id
    </select>

    <select id="listSome" resultMap="BaseResultMap">
          SELECT a.ac_id,
                 a.reg_dtm,
                 a.update_dtm,
                 a.status_cd,
                 a.ac_nm,
                 a.bp_t_cd,
                 a.cd_t_cd,
                 a.up_ac_id,
                 a.expr_yn,
                 a.expr_seq,
                 a.input_yn,
                 a.update_yn,
                 a.delete_yn,
                 a.ps_t_cd
            FROM tf_account a
           WHERE a.status_cd = 'N'
             AND a.ac_id IN
              <foreach collection="acIds" item="acId" index="index" separator="," open="(" close=")">
                  #{acId}
              </foreach>
        ORDER BY a.ac_id
    </select>

    <select id="accountCodeList" parameterType="zinsoft.faas.dto.AccountDto" resultMap="BaseResultMap">
        SELECT a.ac_id,
               a.ac_nm,
               a.up_ac_id,
               (SELECT   x.ac_nm
                  FROM   tf_account x
                 WHERE   x.ac_id = a.up_ac_id) up_ac_nm,
               a.bp_t_cd,
               (SELECT   x.code_nm
                  FROM   tf_code x
                 WHERE   x.code_id = 'BP_T_CD' AND x.code_val = a.bp_t_cd) bp_t_cd_nm,
               a.cd_t_cd,
               (SELECT   x.code_nm
                  FROM   tf_code x
                 WHERE   x.code_id = 'CD_T_CD' AND x.code_val = a.cd_t_cd) cd_t_cd_nm,
               a.expr_seq,
               a.input_yn,
               a.cost_t_cd,
               (SELECT   x.code_nm
                  FROM   tf_code x
                 WHERE   x.code_id = 'COST_T_CD' AND x.code_val = a.cost_t_cd) cost_t_cd_nm,
               a.ps_t_cd,
               (SELECT x.code_nm
                  FROM tf_code x
                 WHERE x.code_id = 'PS_T_CD' AND x.code_val = a.ps_t_cd) ps_t_cd_nm    
          FROM tf_account a
         WHERE a.status_cd = 'N'
      ORDER BY a.bp_t_cd, a.cd_t_cd, a.expr_seq
    </select>

    <select id="page" parameterType="PagingParam" resultMap="BaseResultMap">
        SELECT *
          FROM (SELECT ROWNUM AS RNUM, z.*
                  FROM (SELECT   a.ac_id,
                   a.ac_nm,
                   a.up_ac_id,
                   (SELECT   x.ac_nm
                      FROM   tf_account x
                     WHERE   x.ac_id = a.up_ac_id)
                      up_ac_nm,
                   a.bp_t_cd,
                   (SELECT   x.code_nm
                      FROM   tf_code x
                     WHERE   x.code_id = 'BP_T_CD' AND x.code_val = a.bp_t_cd)
                      bp_t_cd_nm,
                   a.cd_t_cd,
                   (SELECT   x.code_nm
                      FROM   tf_code x
                     WHERE   x.code_id = 'CD_T_CD' AND x.code_val = a.cd_t_cd)
                      cd_t_cd_nm,
                   a.expr_yn,
                   a.expr_seq,
                   a.input_yn,
                   a.cost_t_cd,
                   b.code_nm cost_t_cd_nm,
                   a.update_yn,
                   a.delete_yn,
                   a.ps_t_cd,
                   (SELECT x.code_nm
                      FROM tf_code x
                     WHERE x.code_id = 'PS_T_CD' AND x.code_val = a.ps_t_cd) ps_t_cd_nm
            FROM   tf_account a, tf_code b
           WHERE   a.cost_t_cd = b.code_val(+)
             AND   b.code_id(+) = 'COST_T_CD'
             AND   a.status_cd = 'N'
             <if test="cond.keyword != null and cond.keyword != ''">
                 <if test='cond.field == "acId"'>
                     AND a.ac_id LIKE '%' || #{cond.keyword} || '%'
                 </if>
                 <if test='cond.field == "acNm"'>
                     AND a.ac_nm LIKE '%' || #{cond.keyword} || '%'
                 </if>
                 <if test='cond.field == "costTCdNm"'>
                     AND b.code_nm LIKE '%' || #{cond.keyword} || '%'
                 </if>
             </if>
        ORDER BY   a.ac_id, a.bp_t_cd, a.cd_t_cd, a.expr_seq) z
        <![CDATA[
             WHERE ROWNUM <= (#{start} + #{limit}))
         WHERE RNUM > #{start}
         ]]>
    </select>

    <select id="count" parameterType="PagingParam" resultType="int">
        SELECT COUNT(*)
          FROM tf_account a, tf_code b
         WHERE a.cost_t_cd = b.code_val(+)
           AND b.code_id(+) = 'COST_T_CD'
           AND a.status_cd = 'N'
            <if test="cond.keyword != null and cond.keyword != ''">
                <if test='cond.field == "acId"'>
                    AND a.ac_nm LIKE '%' || #{cond.keyword} || '%'
                </if>
                <if test='cond.field == "acNm"'>
                    AND a.ac_nm LIKE '%' || #{cond.keyword} || '%'
                </if>
                <if test='cond.field == "costTCdNm"'>
                    AND b.code_nm LIKE '%' || #{cond.keyword} || '%'
                </if>
            </if>
    </select>

    <select id="list002002001Grid1" parameterType="Map" resultMap="BaseResultMap">
        SELECT   s.user_id,
                 s.ac_id,
                 (SELECT   x.ac_nm
                    FROM   tf_account x
                   WHERE   x.ac_id = s.ac_id)
                    ac_nm,
                 COUNT (s.ac_id) cnt_ac_id
          FROM   tf_user_slip s
         WHERE   s.user_id = #{userId}
           AND   s.status_cd = 'N'
          <if test="sTrdDt != null and sTrdDt != '' and eTrdDt != null and eTrdDt != ''">
             AND s.trd_dt BETWEEN #{sTrdDt} AND #{eTrdDt}
          </if>
          <if test="sAcId != null and sAcId != '' and eAcId != null and eAcId != ''">
             AND s.ac_id BETWEEN #{sAcId} AND #{eAcId}
          </if>
          <if test="userCropSeq != null and userCropSeq != ''">
             AND s.user_crop_seq = #{userCropSeq}
          </if>
          <if test="userCustSeq != null and userCustSeq != ''">
             AND s.user_cust_seq = #{userCustSeq}
          </if>
          <if test="partTCd != null and partTCd != ''">
			 AND s.user_crop_seq IN ( SELECT user_crop_seq
			                            FROM tf_user_crop
			                           WHERE part_t_cd = #{partTCd})
          </if>
      GROUP BY   s.user_id, s.ac_id
      ORDER BY   s.ac_id
    </select>

    <select id="list002002005Grid1" parameterType="Map" resultMap="BaseResultMap">
        SELECT   s.user_id,
                 s.ac_id,
                 (SELECT   x.ac_nm
                    FROM   tf_account x
                   WHERE   x.ac_id = s.ac_id)
                    ac_nm,
                 COUNT (s.ac_id) cnt_ac_id
          FROM   tf_user_slip s
         WHERE     s.user_id = #{userId}
               AND s.status_cd = 'N'
           <if test="sTrdDt != null and sTrdDt != '' and eTrdDt != null and eTrdDt != ''">
               AND s.trd_dt BETWEEN #{sTrdDt} AND #{eTrdDt}
           </if>
           <if test="sAcId != null and sAcId != '' and eAcId != null and eAcId != ''">
               AND s.ac_id BETWEEN #{sAcId} AND #{eAcId}
           </if>
           <if test="userCropSeq != null and userCropSeq != ''">
               AND s.user_crop_seq = #{userCropSeq}
           </if>
           <if test="userCustSeq != null and userCustSeq != ''">
               AND s.user_cust_seq = #{userCustSeq}
           </if>
           <if test="partTCd != null and partTCd != ''">
               AND s.user_crop_seq IN( SELECT user_crop_seq
                                         FROM tf_user_crop
                                        WHERE part_t_cd = #{partTCd})
           </if>
      GROUP BY   s.user_id, s.ac_id
      ORDER BY   s.ac_id
    </select>

    <select id="rootAcIdList" parameterType="Map" resultMap="BaseResultMap">
        SELECT ac_id,
               reg_dtm,
               update_dtm,
               status_cd,
               ac_nm,
               bp_t_cd,
               cd_t_cd,
               up_ac_id,
               expr_yn,
               expr_seq,
               input_yn,
               cost_t_cd,
               update_yn,
               delete_yn
          FROM tf_account
         WHERE up_ac_id IS NULL
      ORDER BY ac_id ASC
    </select>

    <select id="lvl2AcIdList" parameterType="String" resultMap="BaseResultMap">
        SELECT ac_id,
               reg_dtm,
               update_dtm,
               status_cd,
               ac_nm,
               bp_t_cd,
               cd_t_cd,
               up_ac_id,
               expr_yn,
               expr_seq,
               input_yn,
               cost_t_cd,
               update_yn,
               delete_yn
          FROM tf_account
         WHERE up_ac_id = #{rootAcId}
      ORDER BY ac_id ASC
    </select>

    <select id="bpTCdList" parameterType="String" resultMap="BaseResultMap">
        SELECT code_id,
               code_val,
               code_nm,
               expr_seq
          FROM tf_code
         WHERE code_id = #{cdPrtId}
    </select>

    <update id="update" parameterType="zinsoft.faas.dto.AccountDto">
        UPDATE tf_account
           SET update_dtm = SYSDATE,
               ac_nm =  #{acNm},
               bp_t_cd =  #{bpTCd},
               cd_t_cd = #{cdTCd},
               up_ac_id = #{upAcId},
               expr_yn = #{exprYn},
               expr_seq = #{exprSeq},
               input_yn = #{inputYn},
               cost_t_cd = #{costTCd,jdbcType=CHAR},
               ps_t_cd = #{psTCd,jdbcType=CHAR}
         WHERE ac_id = #{acId}
    </update>

    <delete id="delete" parameterType="String">
        UPDATE tf_account
           SET status_cd = 'D',
               update_dtm = SYSDATE
         WHERE ac_id = #{acId}
    </delete>
</mapper>