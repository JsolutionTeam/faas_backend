<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zinsoft.faas.dao.mapper.AccountMapper">
    <resultMap id="BaseResultMap" type="zinsoft.faas.dto.AccountDto">
        <result column="AC_ID" property="acId" jdbcType="CHAR" />
        <result column="REG_DTM" property="regDtm" jdbcType="DATE" />
        <result column="UPDATE_DTM" property="updateDtm" jdbcType="DATE" />
        <result column="STATUS_CD" property="statusCd" jdbcType="CHAR" />
        <result column="AC_NM" property="acNm" jdbcType="VARCHAR" />
        <result column="BP_T_CD" property="bpTCd" jdbcType="CHAR" />
        <result column="CD_T_CD" property="cdTCd" jdbcType="CHAR" />
        <result column="UP_AC_ID" property="upAcId" jdbcType="CHAR" />
        <result column="EXPR_YN" property="exprYn" jdbcType="CHAR" />
        <result column="EXPR_SEQ" property="exprSeq" jdbcType="NUMERIC" />
        <result column="INPUT_YN" property="inputYn" jdbcType="CHAR" />
        <result column="UPDATE_YN" property="updateYn" jdbcType="CHAR" />
        <result column="DELETE_YN" property="deleteYn" jdbcType="CHAR" />

        <result column="UP_AC_NM" property="upAcNm" jdbcType="CHAR"/>
        <result column="BP_T_CD_NM" property="bpTCdNm" jdbcType="CHAR"/>
        <result column="CD_T_CD_NM" property="cdTCdNm" jdbcType="CHAR"/>
        <result column="COST_T_CD" property="costTCd" jdbcType="CHAR"/>
        <result column="COST_T_CD_NM" property="costTCdNm" jdbcType="CHAR"/>
        <result column="G_CD" property="gCd" jdbcType="CHAR"/>
        <result column="G_CD_NM" property="gCdNm" jdbcType="CHAR"/>
        
        <result column="PS_T_CD" property="psTCd" jdbcType="CHAR" />
        <result column="PS_T_CD_NM" property="psTCdNm" jdbcType="VARCHAR" />
    </resultMap>

    <select id="list" parameterType="Map" resultMap="BaseResultMap">
        SELECT a.ac_id,
               a.reg_dtm,
               a.update_dtm,
               a.status_cd,
                <choose>
                    <when test="normalize != null and normalize == 'Y'.toString()">
                        LOWER (TRIM (a.ac_nm)) ac_nm,
                    </when>
                    <otherwise>
                        a.ac_nm,
                    </otherwise>
                </choose>
               a.bp_t_cd,
               a.cd_t_cd,
               a.up_ac_id,
               a.expr_yn,
               a.expr_seq,
               a.input_yn,
               a.cost_t_cd,
               a.update_yn,
               a.delete_yn,
               a.ps_t_cd,
               (SELECT x.code_nm
                  FROM tf_code x
                 WHERE x.code_id = 'PS_T_CD' AND x.code_val = a.ps_t_cd) ps_t_cd_nm
          FROM tf_account a
         WHERE a.status_cd = 'N'
         <if test="acId != null and acId != ''">
             <choose>
                 <when test="acId.length() == 3">
                     AND a.ac_id = #{acId}
                 </when>
                 <otherwise>
                     AND a.ac_id LIKE '%' || #{acId} || '%'
                 </otherwise>
             </choose>
         </if>
         <if test="acNm != null and acNm != ''">
               AND a.ac_nm LIKE '%' || #{acNm} || '%'
         </if>
         <if test="bpTCd != null and bpTCd != ''">
               AND a.bp_t_cd = #{bpTCd}
         </if>
         <if test="cdTCd != null and cdTCd != ''">
               AND a.cd_t_cd = #{cdTCd}
         </if>
         <if test="exprYn != null and exprYn != ''">
               AND a.expr_yn = #{exprYn}
         </if>
         <if test="inputYn != null and inputYn != ''">
               AND a.input_yn = #{inputYn}
         </if>
         <if test="upAcId != null and upAcId != ''">
               AND a.input_yn = 'Y'
               START WITH a.ac_id = #{upAcId}
               CONNECT BY PRIOR a.ac_id = a.up_ac_id
         </if>
         <if test="psTCd != null and psTCd != ''">
               AND a.ps_t_cd = #{psTCd}
         </if>
      ORDER BY
          <choose>
              <when test="orderBy == null or orderBy == 'ASC'">
                  a.ac_id
              </when>
              <when test="orderBy == null or orderBy == 'NAME_ASC'">
                  a.ac_nm 
              </when>
              <otherwise>
                  a.ac_id DESC
              </otherwise>
          </choose>
    </select>

    <select id="list2" parameterType="pagingParam" resultMap="BaseResultMap">
        SELECT a.ac_id,
               a.reg_dtm,
               a.update_dtm,
               a.status_cd,
               a.ac_nm,
               a.bp_t_cd,
               a.cd_t_cd,
               a.up_ac_id,
               a.expr_yn,
               a.expr_seq,
               a.input_yn,
               (SELECT ac_nm
                  FROM tf_account
                 WHERE ac_id = a.up_ac_id)
                  up_ac_nm,
               (SELECT code_nm
                  FROM tf_code
                 WHERE code_id = 'BP_T_CD' AND code_val = a.bp_t_cd)
                  bp_t_cd_nm,
               (SELECT code_nm
                  FROM tf_code
                 WHERE code_id = 'CD_T_CD' AND code_val = a.cd_t_cd)
                  cd_t_cd_nm,
               a.ps_t_cd,
               (SELECT x.code_nm
                  FROM tf_code x 
                 WHERE x.code_id = 'PS_T_CD' AND x.code_val = a.ps_t_cd) ps_t_cd_nm   
          FROM tf_account a
         WHERE a.status_cd = 'N'
          <if test="cond.keyword != null and cond.keyword != ''">
              <if test='cond.field == "acId"'>
                  AND a.ac_id LIKE '%' || #{cond.keyword} || '%'
              </if>
          </if>
          <if test="cond.keyword != null and cond.keyword != ''">
              <if test='cond.field == "acNm"'>
                  AND a.ac_nm LIKE '%' || #{cond.keyword} || '%'
              </if>
          </if>
      ORDER BY a.ac_id
    </select>

    <select id="listSome" resultMap="BaseResultMap">
          SELECT a.ac_id,
                 a.reg_dtm,
                 a.update_dtm,
                 a.status_cd,
                 a.ac_nm,
                 a.bp_t_cd,
                 a.cd_t_cd,
                 a.up_ac_id,
                 a.expr_yn,
                 a.expr_seq,
                 a.input_yn,
                 a.update_yn,
                 a.delete_yn,
                 a.ps_t_cd
            FROM tf_account a
           WHERE a.status_cd = 'N'
             AND a.ac_id IN
              <foreach collection="acIds" item="acId" index="index" separator="," open="(" close=")">
                  #{acId}
              </foreach>
        ORDER BY a.ac_id
    </select>

    <select id="bpTCdList" parameterType="String" resultMap="BaseResultMap">
        SELECT code_id,
               code_val,
               code_nm,
               expr_seq
          FROM tf_code
         WHERE code_id = #{cdPrtId}
    </select>
</mapper>