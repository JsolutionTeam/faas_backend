<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zinsoft.faas.dao.mapper.UserCropMapper">
    <resultMap id="BaseResultMap" type="zinsoft.faas.dto.UserCropDto">
        <id column="USER_CROP_SEQ" property="userCropSeq" jdbcType="NUMERIC" />
        <id column="USER_ID" property="userId" jdbcType="VARCHAR" />
        <id column="YEAR" property="year" jdbcType="CHAR" />
        <result column="REG_DTM" property="regDtm" jdbcType="DATE" />
        <result column="UPDATE_DTM" property="updateDtm" jdbcType="DATE" />
        <result column="STATUS_CD" property="statusCd" jdbcType="CHAR" />
        <result column="CROP_SEQ" property="cropSeq" jdbcType="NUMERIC" />
        <result column="AREA" property="area" jdbcType="NUMERIC" />
        <result column="MAIN_KIND" property="mainKind" jdbcType="VARCHAR" />
        <result column="CROP_S_CD" property="cropSCd" jdbcType="CHAR" />
        <result column="ST_CROP" property="stCrop" jdbcType="CHAR" />
        <result column="ED_CROP" property="edCrop" jdbcType="CHAR" />
        <result column="PLANT_YEAR" property="plantYear" jdbcType="CHAR" />
        <result column="PLANT_NUM" property="plantNum" jdbcType="NUMERIC" />
        <result column="REMARK" property="remark" jdbcType="VARCHAR" />
        <result column="MOTHER" property="mother" jdbcType="NUMERIC" />
        <result column="YOUNG" property="young" jdbcType="NUMERIC" />
        <result column="ZIPCODE" property="zipcode" jdbcType="VARCHAR" />
        <result column="ADDR1" property="addr1" jdbcType="VARCHAR" />
        <result column="ADDR2" property="addr2" jdbcType="VARCHAR" />

        <result column="CROP_NM" property="cropNm" jdbcType="VARCHAR" />
        <result column="CROP_S_CD_NM" property="cropSCdNm" jdbcType="VARCHAR" />
        <result column="CROP_A_CD" property="cropACd" jdbcType="VARCHAR" />
        <result column="USER_NM" property="userNm" jdbcType="VARCHAR" />

        <result column="PART_T_CD" property="partTCd" jdbcType="CHAR" />
        <result column="PART_T_CD_NM" property="partTCdNm" jdbcType="VARCHAR" />
        <result column="EXPR_YN" property="exprYN" jdbcType="CHAR" />
        <result column="ALIAS_NM" property="aliasNm" jdbcType="VARCHAR" />
    </resultMap>

    <insert id="copy" parameterType="String">
        INSERT INTO tf_user_crop
        (user_crop_seq,
        user_id,
        year,
        reg_dtm,
        update_dtm,
        status_cd,
        crop_seq,
        area,
        main_kind,
        crop_s_cd,
        st_crop,
        ed_crop,
        plant_year,
        plant_num,
        remark,
        mother,
        young,
        zipcode,
        addr1,
        addr2,
        part_t_cd,
        expr_yn,
        alias_nm)
        SELECT seq_user_crop_seq.NEXTVAL user_crop_seq,
        user_id,
        TO_CHAR (SYSDATE, 'yyyy') year,
        SYSDATE,
        SYSDATE,
        status_cd,
        crop_seq,
        area,
        main_kind,
        crop_s_cd,
        st_crop,
        ed_crop,
        plant_year,
        plant_num,
        remark,
        mother,
        young,
        zipcode,
        addr1,
        addr2,
        part_t_cd,
        expr_yn,
        alias_nm
        FROM tf_user_crop
        WHERE user_id = #{userId}
        AND year = TO_CHAR (ADD_MONTHS (SYSDATE, -12), 'yyyy')
        AND status_cd = 'N'
    </insert>

    <select id="getCropSeqByCropNm" resultType="long">
        SELECT MAX (a.crop_seq)
        FROM tf_user_crop a, tf_crop b
        WHERE a.crop_seq = b.crop_seq
        AND a.status_cd = 'N'
        AND b.status_cd = 'N'
        AND a.user_id = #{userId}
        AND LOWER (TRIM (b.expr_nm)) = LOWER (TRIM (#{cropNm}))
    </select>

    <select id="list" parameterType="Map" resultMap="BaseResultMap">
        SELECT x.user_crop_seq,
                x.user_id,
                x.user_nm,
                x.year,
                x.reg_dtm,
                x.update_dtm,
                x.status_cd,
                x.crop_seq,
                x.area,
                x.main_kind,
                x.crop_s_cd,
                x.st_crop,
                x.ed_crop,
                x.plant_year,
                x.plant_num,
                x.remark,
                x.mother,
                x.young,
                x.zipcode,
                x.addr1,
                x.addr2,
                <choose>
                    <when test="normalize != null and normalize == 'Y'.toString()">
                        CASE WHEN x.alias_nm IS NOT NULL
                        THEN
                        LOWER (TRIM (x.alias_nm))
                        ELSE
                        LOWER (TRIM (x.expr_nm||' - '||x.part_t_cd_nm))
                        END
                    </when>
                    <otherwise>
                        CASE WHEN x.alias_nm IS NOT NULL
                        THEN
                        x.alias_nm
                        ELSE
                        x.expr_nm||' - '||x.part_t_cd_nm
                        END
                    </otherwise>
                </choose>
                crop_nm,
                x.crop_s_cd_nm,
                x.crop_a_cd,
                x.part_t_cd,
                x.part_t_cd_nm,
                x.expr_yn,
                x.alias_nm
        FROM ( SELECT a.user_crop_seq,
                        a.user_id,
                        d.user_nm,
                        a.year,
                        a.reg_dtm,
                        a.update_dtm,
                        a.status_cd,
                        a.crop_seq,
                        a.area,
                        a.main_kind,
                        a.crop_s_cd,
                        a.st_crop,
                        a.ed_crop,
                        a.plant_year,
                        a.plant_num,
                        a.remark,
                        a.mother,
                        a.young,
                        xdb_dec('normal', a.zipcode) zipcode,
                        xdb_dec('normal', a.addr1) addr1,
                        xdb_dec('normal', a.addr2) addr2,
                        b.expr_nm,
                        c.code_nm crop_s_cd_nm,
                        b.crop_a_cd,
                        a.part_t_cd,
                        (SELECT x.code_nm
                            FROM tf_code x
                            WHERE x.code_id = 'PART_T_CD' AND x.code_val = a.part_t_cd) part_t_cd_nm,
                        a.expr_yn,
                        a.alias_nm
            FROM tf_user_crop a, tf_crop b, tf_code c, vf_user_info d, tf_code e
            WHERE a.crop_seq = b.crop_seq
                    AND a.crop_s_cd = c.code_val(+)
                    AND a.status_cd = 'N'
                    AND c.code_id(+) = 'CROP_S_CD'
                    AND a.user_id = d.user_id
                    AND b.crop_a_cd = e.code_val(+)
                    AND e.code_id (+ ) = 'CROP_A_CD'
                    <if test="exprYN != null">
                        AND a.expr_yn = #{exprYN}
                    </if>
                    <if test="cropCd != null">
                        <choose>
                            <when test="cropCd == '2'.toString()">
                                    <![CDATA[
                                    AND a.crop_seq >= '600000'
                                    AND a.crop_seq <= '899999'
                                    ]]>
                            </when>
                            <otherwise>
                                    <![CDATA[
                                    AND (a.crop_seq < '600000' OR a.crop_seq > '899999')
                                    ]]>
                            </otherwise>
                        </choose>
                    </if>
                    <if test="userId != null and userId != ''">
                        AND a.user_id = #{userId}
                    </if>
                    <if test="year != null and year != ''">
                        AND a.year IN (#{year}, '1900')
                    </if>
                    <if test="cropingYn != null and cropingYn != ''">
                        AND b.croping_yn = #{cropingYn}
                        <if test="menuId != null and menuId == '002006002'">
                            AND a.crop_seq not like '6%'
                        </if>
                        <if test="menuId != null and menuId == '002006004'">
                            AND a.crop_seq like '6%'
                        </if>
                    </if>
                    <if test="assetYn != null and assetYn != ''">
                        AND b.asset_yn = #{assetYn}
                    </if>
                    <if test="sYear != null and sYear != '' and eYear != null and eYear != ''">
                        AND (a.year BETWEEN ${sYear} AND ${eYear} OR a.year = '1900')
                    </if>
                    <if test="keyword != null and keyword != ''">
                        <if test='field == "userId"'>
                            AND a.user_id LIKE '%' || #{keyword} || '%'
                        </if>
                        <if test='field == "cropNm"'>
                            AND b.expr_nm LIKE '%' || #{keyword} || '%'
                        </if>
                        <if test='field == "mainKind"'>
                            AND a.main_kind LIKE '%' || #{keyword} || '%'
                        </if>
                        <if test='field == "cropSCdNm"'>
                            AND c.code_nm LIKE '%' || #{keyword} || '%'
                        </if>
                        <if test='field == "cropACdNm"'>
                            AND e.code_nm LIKE '%' || #{keyword} || '%'
                        </if>
                    </if>
                    ORDER BY
                    <choose>
                        <when test="orderBy != null and orderBy == 'ASC'">
                                a.user_crop_seq
                        </when>
                        <otherwise>
                            a.user_crop_seq DESC
                        </otherwise>
                    </choose>
                        ) x
        <if test="orderBy != null and orderBy == 'aliasNm'">
            ORDER BY DECODE(x.alias_nm, null, x.expr_nm, x.alias_nm) ASC,
            DECODE(x.alias_nm, null, x.part_t_cd_nm, x.alias_nm) ASC
        </if>
    </select>

    <select id="listByUserId" parameterType="Map" resultMap="BaseResultMap">
        SELECT a.user_crop_seq,
        a.user_id,
        a.year,
        a.reg_dtm,
        a.update_dtm,
        a.status_cd,
        a.crop_seq,
        a.area,
        a.main_kind,
        a.crop_s_cd,
        a.st_crop,
        a.ed_crop,
        a.plant_year,
        a.plant_num,
        a.remark,
        a.mother,
        a.young,
        xdb_dec('normal', a.zipcode) zipcode,
        xdb_dec('normal', a.addr1) addr1,
        xdb_dec('normal', a.addr2) addr2,
        <choose>
            <when test="normalize != null and normalize == 'Y'.toString()">
                LOWER (TRIM (b.expr_nm))
            </when>
            <otherwise>
                b.expr_nm
            </otherwise>
        </choose>
        crop_nm,
        c.code_nm crop_s_cd_nm,
        b.crop_a_cd,
        a.part_t_cd,
        (SELECT x.code_nm
        FROM tf_code x
        WHERE x.code_id = 'PART_T_CD' AND x.code_val = a.part_t_cd) part_t_cd_nm,
        a.expr_yn,
        a.alias_nm
        FROM tf_user_crop a, tf_crop b, tf_code c, tf_code e
        WHERE a.crop_seq = b.crop_seq
        AND a.crop_s_cd = c.code_val(+)
        AND a.status_cd = 'N'
        AND c.code_id(+) = 'CROP_S_CD'
        AND b.crop_a_cd = e.code_val(+)
        AND e.code_id (+ ) = 'CROP_A_CD'
        <if test="exprYN != null">
            AND a.expr_yn = #{exprYN}
        </if>
        <if test="cropCd != null">
            <choose>
                <when test="cropCd == '2'.toString()">
                       <![CDATA[
                       AND a.crop_seq >= '600000'
                       AND a.crop_seq <= '899999'
                       ]]>
                </when>
                <otherwise>
                       <![CDATA[
                       AND (a.crop_seq < '600000' OR a.crop_seq > '899999')
                       ]]>
                </otherwise>
            </choose>
        </if>
        <if test="userId != null and userId != ''">
            AND a.user_id = #{userId}
        </if>
        ORDER BY
        <choose>
            <when test="orderBy != null and orderBy == 'ASC'">
                a.user_crop_seq
            </when>
            <otherwise>
                a.user_crop_seq DESC
            </otherwise>
        </choose>
    </select>

    <select id="countByAliasNm" resultType="int">
        SELECT COUNT(*)
        FROM tf_user_crop a
        WHERE a.user_id = #{userId}
        AND a.status_cd = 'N'
        AND LOWER (TRIM (a.alias_nm)) = LOWER (TRIM (#{aliasNm}))
        <if test="userCropSeq != null and userCropSeq > 0">
            AND user_crop_seq != #{userCropSeq}
        </if>
    </select>

    <update id="updateExpr" parameterType="zinsoft.faas.dto.UserCropDto">
        UPDATE tf_user_crop
        SET update_dtm = SYSDATE,
        expr_yn = #{exprYN, jdbcType=CHAR}
        WHERE user_crop_seq = #{userCropSeq}
        AND status_cd = 'N'
        AND user_id = #{userId}
    </update>

    <update id="delete" parameterType="zinsoft.faas.dto.UserCropDto">
        UPDATE tf_user_crop
        SET update_dtm = SYSDATE,
        status_cd = 'D',
        update_mem_prdlst = 'Y'
        WHERE status_cd = 'N'
        AND user_crop_seq = #{userCropSeq}
        AND user_id = #{userId}
    </update>
</mapper>